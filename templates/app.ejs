<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<style>
    body,
    html {
        width: 100%;
        min-height: 100%;
    }

    .container_custom {
        width: 100% !important;
        min-height: 350px;
        inset: 0;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        max-width: 95vw;
        margin: 20px;
        border-radius: 10px;
        border: 1px solid black;
        text-align: center;
    }

    .test {
        font-size: 20px;
        display: none;
        text-align: center;
        /* font-weight: bold; */
        font-family: Arial, Helvetica, sans-serif;
    }

    .box {
        background-color: black;
        height: 5px;
        width: 60px;
        /* max-width: 90% !important; */
    }

    .cal {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
        width: 100%;
    }

    .result {
        display: none;
    }

    .arrow {
        border: solid black;
        border-width: 0 3px 3px 0;
        display: inline-block;
        padding: 3px;
    }

    .right {
        transform: translateX(-3px) rotate(-45deg);
        -webkit-transform: translateX(-3px) rotate(-45deg);
    }

    .left {
        transform: translateX(3px) rotate(135deg);
        -webkit-transform: translateX(3px) rotate(135deg);
    }

    .up {
        transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
    }

    .down {
        transform: translateY(-3px) rotate(45deg);
        -webkit-transform: translateY(-3px) rotate(45deg);
    }

    .calibrate_container {
        margin: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        max-width: 100%;
    }

    .app_btn {
        padding: 5px 10px;
        /* background-color: black; */
        border-radius: 50% !important;
        border: 1px solid black !important;
        cursor: pointer;
    }

    .app_btn:hover {
        background-color: black;
    }

    .app_btn:hover .arrow {
        border-color: white;
    }

    .recal {
        display: none;
    }

    .nav-tabs li div {
        cursor: pointer;
    }

    .two_btns {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    /* max width 500px */
    @media only screen and (max-width: 500px) {
        .two_btns {
            flex-direction: column;
        }
    }

    .section {
        display: flex;
        align-items: center;
        justify-content: center;
        background: url("https://img.freepik.com/free-vector/abstract-blue-geometric-shapes-background_1035-17545.jpg?w=2000") rgba(0, 0, 0, 0.6) no-repeat center center/cover;
        background-attachment: fixed;
        background-blend-mode: multiply;
        color: white;
        height: 50vh;
        font-size: 6rem !important;
        text-align: center;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .btn a {
        text-decoration: none !important;
        color: black;
    }

    @media only screen and (max-width: 900px) {
        .section {
            font-size: 4rem !important;
        }
    }

    @media only screen and (max-width: 500px) {
        .section {
            font-size: 3rem !important;
        }

        .cal h1 {
            font-size: 2rem !important;
        }
    }
</style>

<body>
    <%- include("partials/navbar.ejs") %>
        <div class="section">
            Check Eye Power
            <button class="btn mt-3 px-5"><a href="/#about">

                    How To Use
                </a>
            </button>
        </div>
        <div class="container_custom mx-auto">
            <ul class="nav nav-tabs mt-3" style="display: none;">
                <li class="nav-item">
                    <div class="nav-link active left-eye" aria-current="page">Left Eye</div>
                </li>
                <li class="nav-item">
                    <div class="nav-link right-eye" aria-current="page">Right Eye</div>
                </li>
            </ul>
            <div class="eye_test" style="display: none;">
                <h2 class="mt-5">Eye Test</h2>
                <div class="test my-5" style="font-size: 20px;">F P C D</div>
                <h3 class="result"></h3>
            </div>
            <div class="cal">

                <h1 class="mt-5">Calibrate Your Distance</h1>
                <div class="calibrate_container">
                    <div class="arrow left"></div>
                    <div class="box" style="width: 60px;"></div>
                    <div class="arrow right"></div>
                </div>
                <div class="d-flex">

                    <div class="btn app_btn app_up mx-1">
                        <div class="arrow up"></div>
                    </div>
                    <div class="btn app_btn app_down mx-1">

                        <div class="arrow down"></div>
                    </div>
                </div>
            </div>
            <div class="two_btns">

                <button class="btn m-2 cal_button px-5 py-1">Calibrate</button>
                <button class="btn m-2 recal px-5 py-1" style="display:none;">Re Calibrate</button>
            </div>
            <form class="eyeForm" action="" style="display:none;">
                <input class="leftEyeInput" type="hidden" name="leftEye">
                <input class="rightEyeInput" type="hidden" name="rightEye">
                <button type="submit" class="btn m-2 save px-5 py-1">Save my results</button>

            </form>

        </div>
        <!-- <div style="position:absolute; bottom: 0; left:0; right: 0;"> -->
        <%- include("partials/footer.ejs") %>

            <!-- </div> -->
            <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
            <script>
                const box = document.querySelector('.box');
                const test = document.querySelector('.test');
                const calButton = document.querySelector(".cal_button");
                const result = document.querySelector(".result");
                const cal = document.querySelector(".cal");
                const up = document.querySelector(".app_up");
                const down = document.querySelector(".app_down");
                const recal = document.querySelector(".recal");
                const save = document.querySelector(".save");
                const navTabs = document.querySelector(".nav-tabs");
                const leftEye = document.querySelector(".left-eye");
                const rightEye = document.querySelector(".right-eye");
                const eyeTest = document.querySelector(".eye_test");
                const leftEyeInput = document.querySelector(".leftEyeInput");
                const rightEyeInput = document.querySelector(".rightEyeInput");
                const form = document.querySelector(".eyeForm");

                form.onsubmit = async (e) => {
                    e.preventDefault();
                    const data = new FormData(form);
                    const leftEye = data.get("leftEye");
                    const rightEye = data.get("rightEye");

                    const res = await fetch("/saveResult", {
                        method: "POST",
                        body: JSON.stringify({ leftEye, rightEye }),
                        headers: { "Content-type": "application/json" }
                    })
                    if (res.redirected) {
                        window.location.href="/login";
                    }

                    let dataPower = await res.json();

                    if (dataPower == 'true') {
                        alert("Saved Succesfully")
                        save.style.border = "2px solid green";
                        location.assign("/checkup")
                    }
                    else {
                        alert("Calculate for both eyes")
                        save.style.border = "2px solid red"
                    }

                    console.log(leftEye, rightEye);
                }
                let isLeftEye = true;

                leftEye.onclick = () => {
                    isLeftEye = true;
                    rightEye.classList.remove("active");
                    leftEye.classList.add("active");
                    eyeTest.firstElementChild.innerHTML = isLeftEye ? "Left Eye Test" : "Right Eye Test";
                    result.style.display = "none";
                }
                rightEye.onclick = () => {
                    isLeftEye = false;
                    leftEye.classList.remove("active");
                    rightEye.classList.add("active");
                    eyeTest.firstElementChild.innerHTML = isLeftEye ? "Left Eye Test" : "Right Eye Test";
                    result.style.display = "none";
                }

                const calibration = {
                    isCalibrated: false,
                    calibrationUnit: 0
                }
                let count = 20;

                const incCount = () => {
                    if (!calibration.isCalibrated && 3 * count > 0.9 * cal.clientWidth) return;
                    count++;
                    test.style.fontSize = count + 'px';
                    box.style.width = 3 * count + 'px';
                }
                const decCount = () => {
                    // if (3 * count > 0.8 * cal.clientWidth) return;
                    count--;
                    test.style.fontSize = count + 'px';
                    box.style.width = 3 * count + 'px';
                }

                up.onclick = incCount
                down.onclick = decCount


                async function calcEyePower(size) {
                    const calUnit = calibration.calibrationUnit;

                    const res = await axios.get(`http://localhost:5000/result?size=${size}&calUnit=${calUnit}`,
                        { withCredentials: false },
                    )
                    return res.data.output;
                }

                recal.onclick = (e) => {
                    calibration.isCalibrated = false;
                    recal.style.display = "none";
                    test.style.display = "none";
                    result.style.display = "none";
                    eyeTest.style.display = "none";
                    form.style.display = "none";
                    cal.style.display = "flex";
                    navTabs.style.display = "none";
                    calButton.innerHTML = "Calibrate";
                    count = 19;
                    incCount();
                }
                calButton.onclick = async () => {
                    if (calibration.isCalibrated) {
                        try {
                            calButton.innerHTML = "Calculating...";
                            calButton.disabled = true;
                            const eyePower = await calcEyePower(parseInt(test.style.fontSize.split("p")[0]));
                            result.innerHTML = `Your eye power is ${eyePower}`;
                            result.style.display = "block";
                            calButton.disabled = false;
                            calButton.innerHTML = "Calculate My Power";
                        } catch (error) {
                            alert("Something went wrong, please try again later");
                            console.log("error", error)
                            calButton.disabled = false;
                            calButton.innerHTML = "Calculate My Power";
                        }
                        if (isLeftEye) {
                            const eyePower = await calcEyePower(parseInt(test.style.fontSize.split("p")[0]));
                            leftEyeInput.value = eyePower;
                        } else {
                            const eyePower = await calcEyePower(parseInt(test.style.fontSize.split("p")[0]));
                            rightEyeInput.value = eyePower
                        }
                    } else {
                        calibration.calibrationUnit = parseInt(box.style.width.split("p")[0]);
                        calibration.isCalibrated = true;
                        calButton.innerHTML = "Calculate My Power";
                        cal.style.display = "none";
                        eyeTest.style.display = "block";
                        test.style.display = "block";
                        form.style.display = "block";
                        navTabs.style.display = "flex";
                        eyeTest.firstElementChild.innerHTML = isLeftEye ? "Left Eye Test" : "Right Eye Test";
                        recal.style.display = "block";
                        count = 19;
                        incCount();
                    }
                }

                function randomChar() {
                    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
                    return chars.charAt(Math.floor(Math.random() * chars.length));
                }
                window.onresize = () => {
                    if (cal.style.display === "none") return;
                    count = 0.9 * cal.clientWidth / 3;
                    test.style.fontSize = count + 'px';
                    // console.log("couont => ",test.style.fontSize);
                    box.style.width = 3 * count + 'px';
                }
                window.addEventListener('keydown', (e) => {
                    if (e.keyCode === 87) {
                        incCount();
                    }
                    else if (e.keyCode === 83) {
                        decCount();
                    } else if (e.keyCode === 32) {
                        test.innerHTML = `${randomChar()} ${randomChar()} ${randomChar()} ${randomChar()}`;
                        incCount();
                        decCount();
                    }
                    // } else if (e.key === "q"){
                    //     k += 1;
                    //     result.innerHTML = `Your eye power is ${calcEyePower(parseInt(test.style.fontSize.split("p")[0]))}`;
                    // } else if (e.key === "e") {
                    //     k -= 1;
                    //     result.innerHTML = `Your eye power is ${calcEyePower(parseInt(test.style.fontSize.split("p")[0]))}`;
                    // } else if (e.key === "w") {
                    //     console.log("k = ",k);
                    // }
                    // console.log(box)

                })
            </script>
</body>

</html>